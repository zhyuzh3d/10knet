{"time":"2016-12-27T08:34:53.608Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './app_modules/_qn2.js',undefined"}
{"time":"2016-12-27T08:36:46.752Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './app_modules/_qn2.js',undefined"}
{"time":"2016-12-27T08:36:59.281Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './app_modules/_qn2.js',undefined"}
{"time":"2016-12-27T08:37:19.603Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './app_modules/_qn2.js',undefined"}
{"time":"2016-12-27T09:36:30.548Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './app_modules/_qn2.js',undefined"}
{"time":"2016-12-27T09:37:03.010Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './app_modules/_qn2.js',undefined"}
{"time":"2016-12-27T09:42:22.713Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './zrpms.js',undefined"}
{"time":"2016-12-27T09:42:36.340Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './_zprms.js',undefined"}
{"time":"2016-12-27T09:43:16.081Z","type":"INFO","data":"_zprms:samples run:/**\n * 扩展函数的Promise方法，务必注意异常捕获，这里不包含reject处理，参见底部samples\n * 为所有函数增加.zprms和.zpromise方法，fn(arg,...,callBackFn(err,res))格式的函数可用；\n * 为所有函数增加.zprms2和.zpromise2方法，fn(callBackFn(err,res)，arg,...)格式的函数可用；\n * .zprms2可用做sleep功能,await setTimeout.zprms2(5000);\n */\n'use strict';\n\nconst _zprms = {\n    info: console.log('_zprms: .zprms & .zpromise method has added to Function'),\n};\n\n(function () {\n    Function.prototype.zprms = Function.prototype.zpromise = zprms;\n    Function.prototype.zprms2 = Function.prototype.zpromise2 = zprms2;\n})();\n\nmodule.exports = _zprms;\n\n//-----------------------functions------------------------\n\n/**\n * 匹配参数格式fn(arg,...,callBackFn(err,res))的函数\n * @returns {promise} promise\n */\nfunction zprms() {\n    var orgArgs = arguments;\n    var fn = this;\n    var prms = genPromise(fn, orgArgs, true);\n    return prms;\n};\n\n/**\n * 匹配参数格式fn(callBackFn(err,res),arg,...)的函数\n * @returns {promise} promise\n */\nfunction zprms2() {\n    var orgArgs = arguments;\n    var fn = this;\n    var prms = genPromise(fn, orgArgs, false);\n    return prms;\n};\n\n/**\n * 将callback转换为promise的关键函数\n * @param   {function} fn   需要转换的函数\n * @param   {object} args   原始函数的参数，即arguments对象\n * @param   {boolean} cbAtEnd  callback函数是否最后一个参数，默认为true\n * @returns {promise} promise\n */\nfunction genPromise(fn, args, cbAtEnd = true) {\n    return new Promise((resolve, reject) => {\n        function callbackFn(err, res) {\n            if (!err || (err && err.constructor != Error)) { //兼容cb第一个参数不是err的情况\n                resolve(res);\n            } else {\n                reject(err, res);\n            };\n        };\n\n        var argsArr = [];\n        for (var key in args) {\n            argsArr.push(args[key]);\n        };\n        if (cbAtEnd) {\n            argsArr.push(callbackFn);\n        } else {\n            argsArr.unshift(callbackFn);\n        };\n\n        fn.apply(fn, argsArr);\n    });\n};\n\n\n//------------------------samples--------------------------\n(async function () {\n    try {\n        //read a file, then print the buffer.\n        var res = await $fs.readFile.zprms('./base_modules/_zprms.js');\n\n        //wait 3 sec then print undefined.\n        //var res = await setTimeout.zprms2(5000);\n\n        _zloger.log(`_zprms:samples run:${res}`);\n    } catch (err) {\n        _zloger.log(`_zprms:samples err':${err},${res}`);\n    };\n})();\n"}
{"time":"2016-12-27T09:44:57.707Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './base_modules/_zprms2.js',undefined"}
{"time":"2016-12-27T09:56:15.937Z","type":"INFO","data":"_zprms:samples run:/**\n * 扩展函数的Promise方法，务必注意异常捕获，这里不包含reject处理，参见底部samples\n * 为所有函数增加.zprms和.zpromise方法，fn(arg,...,callBackFn(err,res))格式的函数可用；\n * 为所有函数增加.zprms2和.zpromise2方法，fn(callBackFn(err,res)，arg,...)格式的函数可用；\n * .zprms2可用做sleep功能,await setTimeout.zprms2(5000);\n */\n'use strict';\n\nconst _zprms = {\n    info: console.log('_zprms: .zprms & .zpromise method has added to Function'),\n};\n\n(function () {\n    Function.prototype.zprms = Function.prototype.zpromise = zprms;\n    Function.prototype.zprms2 = Function.prototype.zpromise2 = zprms2;\n})();\n\nmodule.exports = _zprms;\n\n//-----------------------functions------------------------\n\n/**\n * 匹配参数格式fn(arg,...,callBackFn(err,res))的函数\n * @returns {promise} promise\n */\nfunction zprms() {\n    var orgArgs = arguments;\n    var fn = this;\n    var prms = genPromise(fn, orgArgs, true);\n    return prms;\n};\n\n/**\n * 匹配参数格式fn(callBackFn(err,res),arg,...)的函数\n * @returns {promise} promise\n */\nfunction zprms2() {\n    var orgArgs = arguments;\n    var fn = this;\n    var prms = genPromise(fn, orgArgs, false);\n    return prms;\n};\n\n/**\n * 将callback转换为promise的关键函数\n * @param   {function} fn   需要转换的函数\n * @param   {object} args   原始函数的参数，即arguments对象\n * @param   {boolean} cbAtEnd  callback函数是否最后一个参数，默认为true\n * @returns {promise} promise\n */\nfunction genPromise(fn, args, cbAtEnd = true) {\n    return new Promise((resolve, reject) => {\n        function callbackFn(err, res) {\n            if (!err || (err && err.constructor != Error)) { //兼容cb第一个参数不是err的情况\n                resolve(res);\n            } else {\n                reject(err, res);\n            };\n        };\n\n        var argsArr = [];\n        for (var key in args) {\n            argsArr.push(args[key]);\n        };\n\n        if (cbAtEnd) {\n            argsArr.push(callbackFn);\n        } else {\n            argsArr.unshift(callbackFn);\n        };\n\n        fn.apply(fn, argsArr);\n    });\n};\n\n\n//------------------------samples--------------------------\n(async function () {\n    try {\n        //read a file, then print the buffer.\n        var res = await $fs.readFile.zprms('./base_modules/_zprms.js');\n\n        //wait 3 sec then print undefined.\n        //var res = await setTimeout.zprms2(5000);\n\n        _zloger.log(`_zprms:samples run:${res}`);\n    } catch (err) {\n        _zloger.log(`_zprms:samples err':${err},${res}`);\n    };\n})();\n\n\nconsole.log('>>ERR', ads);\n"}
{"time":"2016-12-27T09:56:59.248Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './base_modules/_zprms.js2',undefined"}
{"time":"2016-12-27T10:14:27.341Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './base_modules/_zprms.js2',undefined"}
{"time":"2016-12-27T10:14:40.184Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './base_modules/_zprms.js2',undefined"}
{"time":"2016-12-27T10:17:32.006Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './base_modules/_zprms.js2',undefined"}
{"time":"2016-12-27T10:17:44.668Z","type":"INFO","data":"_zprms:samples err':Error: ENOENT: no such file or directory, open './base_modules/_zprms.js2',undefined"}
{"time":"2016-12-27T10:20:24.546Z","type":"INFO","data":"_qn:server listening on 19110"}
{"time":"2016-12-27T10:21:09.001Z","type":"INFO","data":"_qn:server listening on 19110"}
{"time":"2016-12-27T10:21:18.092Z","type":"INFO","data":"_qn:server listening on 19110"}
{"time":"2016-12-27T10:21:55.137Z","type":"INFO","data":"_qn:server listening on 19110"}
{"time":"2016-12-27T10:22:22.583Z","type":"INFO","data":"_zprms: .zprms & .zpromise method has added to Function"}
{"time":"2016-12-27T10:22:22.607Z","type":"INFO","data":"_qn:server listening on 19110"}
{"time":"2016-12-27T10:22:37.689Z","type":"INFO","data":"_zprms: .zprms & .zpromise method has added to Function."}
{"time":"2016-12-27T10:22:37.737Z","type":"INFO","data":"_qn:server listening on 19110."}
{"time":"2016-12-27T10:22:57.381Z","type":"INFO","data":"_zprms: .zprms & .zpromise method has added to Function."}
{"time":"2016-12-27T10:22:57.480Z","type":"INFO","data":"_qn:Server is listening on 19110."}
{"time":"2016-12-27T10:29:32.147Z","type":"INFO","data":"_zprms: .zprms & .zpromise method has added to Function."}
{"time":"2016-12-27T10:29:32.349Z","type":"INFO","data":"_qn:Server is listening on 19110."}
{"time":"2016-12-27T10:30:11.101Z","type":"INFO","data":"_zprms:.zprms&.zpromise method has added to Function."}
{"time":"2016-12-27T10:30:11.121Z","type":"INFO","data":"_qn:Server is listening on 19110."}
{"time":"2016-12-27T10:30:19.664Z","type":"INFO","data":"_zprms:.zprms & .zpromise method has added to Function."}
{"time":"2016-12-27T10:30:19.684Z","type":"INFO","data":"_qn:Server is listening on 19110."}
